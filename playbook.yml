- hosts: localhost
  become: yes
  vars:
    # This configuration is only available for Ubuntu
    ubuntu_dist_for_nvidia_cuda: "{{ ansible_distribution_version | regex_replace('\\.', '')}}"
  tasks:
    # Set hostname
    - name: prompt hostname
      pause:
        prompt: "HOSTNAME [{{ ansible_fqdn }}]"
      register: hostname_input
    - name: set default hostname
      set_fact:
        hostname: "{{ hostname_input.user_input | default(ansible_fqdn, true) }}"
    - name: set hostname
      hostname:
        name: "{{ hostname }}"
      when: hostname !=  ansible_fqdn
    # Set directory to english name
    - name: set home directories to english name
      shell: LANG=C xdg-user-dirs-gtk-update
      become: no
    # Configure apt server
    - name: set japanese apt server
      replace:
        path: /etc/apt/sources.list
        regexp: '(http:\/\/archive\.ubuntu\.com\/ubuntu\/|http:\/\/us\.archive\.ubuntu\.com\/ubuntu\/)'
        replace: 'http://jp.archive.ubuntu.com/ubuntu/'
    # Install apt packages
    - name: install apt packages
      apt:
        name: [aptitude, git, make, gcc, vim-gnome, openssh-server]
        state: present
        update_cache: yes
    # Install Google Chrome
    - name: add chrome registory key
      apt_key:
        url: https://dl-ssl.google.com/linux/linux_signing_key.pub
        state: present
    - name: add chrome registory
      apt_repository:
        repo: deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main
        state: present
        update_cache: no
        filename: google-chrome
    - name: install google-chrome
      apt:
        name: [google-chrome-stable]
        state: present
        update_cache: yes
    # Install Visual Studio Code
    - name: add vscode registory key
      apt_key:
        url: https://packages.microsoft.com/keys/microsoft.asc
        state: present
    - name: add vscode registory
      apt_repository:
        repo: deb [arch=amd64] https://packages.microsoft.com/repos/vscode stable main
        state: present
        update_cache: no
        filename: vscode
    - name: install visual studio code
      apt:
        name: [code]
        state: present
        update_cache: yes
    # Install nvidia-driver
    - name: add graphics-driver registory
      apt_repository:
        repo: ppa:graphics-drivers/ppa
    - name: install nvidia-driver
      apt:
        name: [nvidia-driver-430]
        state: present
        update_cache: yes
    - name: Blacklist the nouveau driver module
      kernel_blacklist:
        name: nouveau
        state: present
    # Install docker-ce & nvidia-docker2
    - name: install docker dependencies
      apt:
        name: [apt-transport-https, ca-certificates, curl, gnupg-agent, software-properties-common]
        state: present
        update_cache: yes
    - name: add docker registory key
      apt_key:
        url: https://download.docker.com/linux/debian/gpg
        state: present
    - name: add docker repository source
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
        state: present
        update_cache: no
        filename: docker
    - name: add nvidia-docker repository key
      apt_key:
        url: https://nvidia.github.io/nvidia-docker/gpgkey
        state: present
    - name: add nvidia-docker repository source
      get_url:
        url: https://nvidia.github.io/nvidia-docker/{{ ansible_distribution | lower }}{{ ansible_distribution_version }}/nvidia-docker.list
        dest: /etc/apt/sources.list.d/nvidia-docker.list
        owner: root
        group: root
        mode: 0644
    - name: install docker and nvidia-docker
      apt:
        name:
          - 'docker-ce=5:19.03.0~3-0~ubuntu-bionic'
          - 'docker-ce-cli=5:19.03.0~3-0~ubuntu-bionic'
          - 'nvidia-docker2=2.1.0-1'
          - 'nvidia-container-runtime=3.1.0-1'
          - containerd.io
        state: present
        update_cache: yes
      register: nvidia_docker_apt
    - name: keep versions of docker and nvidia-docker
      dpkg_selections:
        name: "{{ item }}"
        selection: hold
      with_items: [docker-ce, docker-ce-cli, nvidia-docker2, nvidia-container-runtime]
    - name: reload docker configuration
      service:
        name: docker
        state: reloaded
      when: nvidia_docker_apt.changed == True
    - name: add user to docker group
      user:
        name: '{{ ansible_user }}'
        groups: docker
        append: yes
    - name: set git email
      git_config:
        name: user.email
        scope: global
        value: chmod644@users.noreply.github.com
      become: no
    - name: set git username
      git_config:
        name: user.name
        scope: global
        value: chmod644
      become: no

